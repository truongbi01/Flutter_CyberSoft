import 'dart:io';

void main() {
  List<Map<String, dynamic>> gioHang = [];
  String? chon;

  do {
    print("\n===== MENU =====");
    print("1. Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng");
    print("2. S·ª≠a v√† x√≥a s·∫£n ph·∫©m trong gi·ªè h√†ng");
    print("3. Hi·ªÉn th·ªã gi·ªè h√†ng");
    print("4. T√≠nh t·ªïng ti·ªÅn h√≥a ƒë∆°n");
    print("5. Tho√°t");
    stdout.write("Ch·ªçn: ");
    chon = stdin.readLineSync();

    switch (chon) {
      case "1":
        themSanPham(gioHang);
        break;
      case "2":
        suaXoaSanPham(gioHang);
        break;
      case "3":
        hienThiGioHang(gioHang);
        break;
      case "4":
        tinhTongTien(gioHang);
        break;
      case "5":
        print("K·∫øt th√∫c ch∆∞∆°ng tr√¨nh!");
        break;
      default:
        print("Ch·ªçn sai, vui l√≤ng nh·∫≠p l·∫°i!");
    }
  } while (chon != "5");
}

// 1. Th√™m s·∫£n ph·∫©m
void themSanPham(List<Map<String, dynamic>> gioHang) {
  stdout.write("T√™n s·∫£n ph·∫©m: ");
  String ten = stdin.readLineSync()!;
  stdout.write("Gi√°: ");
  double gia = double.parse(stdin.readLineSync()!);
  stdout.write("S·ªë l∆∞·ª£ng: ");
  int soLuong = int.parse(stdin.readLineSync()!);

  gioHang.add({
    "ten": ten,
    "gia": gia,
    "soLuong": soLuong,
  });

  print("‚úÖ ƒê√£ th√™m $ten v√†o gi·ªè h√†ng.");
}

// 2. S·ª≠a ho·∫∑c x√≥a s·∫£n ph·∫©m
void suaXoaSanPham(List<Map<String, dynamic>> gioHang) {
  if (gioHang.isEmpty) {
    print("‚ùå Gi·ªè h√†ng tr·ªëng.");
    return;
  }

  hienThiGioHang(gioHang);
  stdout.write("Nh·∫≠p t√™n s·∫£n ph·∫©m c·∫ßn s·ª≠a/x√≥a: ");
  String ten = stdin.readLineSync()!;

  var sp = gioHang.firstWhere(
    (sp) => sp["ten"].toLowerCase() == ten.toLowerCase(),
    orElse: () => {},
  );

  if (sp.isEmpty) {
    print("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.");
    return;
  }

  print("1. S·ª≠a s·∫£n ph·∫©m");
  print("2. X√≥a s·∫£n ph·∫©m");
  stdout.write("Ch·ªçn: ");
  String? chon = stdin.readLineSync();

  if (chon == "1") {
    stdout.write("Nh·∫≠p s·ªë l∆∞·ª£ng m·ªõi: ");
    sp["soLuong"] = int.parse(stdin.readLineSync()!);
    stdout.write("Nh·∫≠p gi√° m·ªõi: ");
    sp["gia"] = double.parse(stdin.readLineSync()!);
    print("ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m.");
  } else if (chon == "2") {
    gioHang.remove(sp);
    print("ƒê√£ x√≥a s·∫£n ph·∫©m.");
  } else {
    print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
  }
}

// 3. Hi·ªÉn th·ªã gi·ªè h√†ng
void hienThiGioHang(List<Map<String, dynamic>> gioHang) {
  if (gioHang.isEmpty) {
    print("üõí Gi·ªè h√†ng tr·ªëng.");
  } else {
    print("\n===== GI·ªé H√ÄNG =====");
    for (var sp in gioHang) {
      print(
          "${sp["ten"]} | Gi√°: ${sp["gia"].toStringAsFixed(2)} | SL: ${sp["soLuong"]}");
    }
  }
}

// 4. T√≠nh t·ªïng ti·ªÅn
void tinhTongTien(List<Map<String, dynamic>> gioHang) {
  if (gioHang.isEmpty) {
    print(" Gi·ªè h√†ng tr·ªëng.");
    return;
  }

  double tong = 0;
  for (var sp in gioHang) {
    tong += sp["gia"] * sp["soLuong"];
  }

  print("·ªïng ti·ªÅn h√≥a ƒë∆°n: ${tong.toStringAsFixed(2)} VND");
}
